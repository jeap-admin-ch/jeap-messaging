@namespace("ch.admin.test")
protocol TestTestEvent {
  import idl "ch.admin.bit.jeap.domainevent.registry.verifier.testevent.TestEnum.avdl"; // this import is not used

  @namespace("ch.admin.bit.jeap.domainevent.avro")
  record AvroDomainEventPublisher {
    string system;
    string service;
  }

  @namespace("ch.admin.bit.jeap.domainevent.avro")
  record AvroDomainEventType {
    string name;
    string version;
  }

  @namespace("ch.admin.bit.jeap.domainevent.avro")
  record AvroDomainEventIdentity {
    string eventId;
    string idempotenceId;
    timestamp_ms created;
  }

  // ###############
  // ## PAYLOAD
  // ###############
  record TestTestEventPayload {
    union { null, string } messageFunctionType = null;
    union { null, string } functionalReference = null;
    union { null, timestamp_ms } documentIssueDate = null;
    union { null, timestamp_ms } controlResultDate = null;
    union { null, string } masterReferenceNumber = null;
    union { null, string } customsOfficeOfControlReferenceNumber = null;
  }

  // ###############
  // ## META-INFO
  // ###############

  record TestTestEventReferences {
  }

  record TestTestEvent {
    ch.admin.bit.jeap.domainevent.avro.AvroDomainEventIdentity identity;
    ch.admin.bit.jeap.domainevent.avro.AvroDomainEventType type;
    ch.admin.bit.jeap.domainevent.avro.AvroDomainEventPublisher publisher;
    TestTestEventPayload payload;
    TestTestEventReferences references;
    string domainEventVersion;
  }
}