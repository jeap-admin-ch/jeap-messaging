{
  "properties": [
    {
      "name": "jeap.messaging.kafka.admin-client-bootstrap-servers",
      "type": "java.lang.String",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.bootstrap-servers",
      "type": "java.lang.String",
      "description": "A bootstrap-server of the Kafka-Cluster.",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.consumer-bootstrap-servers",
      "type": "java.lang.String",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.username",
      "type": "java.lang.String",
      "description": "The username if {@link SecurityProtocol#SASL_PLAINTEXT} or {@link SecurityProtocol#SASL_SSL} is used.",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.password",
      "type": "java.lang.String",
      "description": "The password if {@link SecurityProtocol#SASL_PLAINTEXT} or {@link SecurityProtocol#SASL_SSL} is used.",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.producer-bootstrap-servers",
      "type": "java.lang.String",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.schema-registry-password",
      "type": "java.lang.String",
      "description": "Password to be used to authenticate against the schema registry.",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.schema-registry-url",
      "type": "java.lang.String",
      "description": "The URL of the schema registry to be used. Only needed if useSchemaRegistry is set to true.",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.schema-registry-username",
      "type": "java.lang.String",
      "description": "Username to be used to authenticate against the schema registry.",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.security-protocol",
      "type": "org.apache.kafka.common.security.auth.SecurityProtocol",
      "description": "The security protocol to be used, usually {@link SecurityProtocol#SASL_SSL} on CF or {@link SecurityProtocol#SASL_PLAINTEXT for local kafka.",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.cluster",
      "type": "java.util.Map<java.lang.String,ch.admin.bit.jeap.messaging.kafka.properties.cluster.ClusterProperties>",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.default-cluster-name",
      "type": "java.lang.String",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.default-producer-cluster-override",
      "type": "java.lang.String",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.kafka.error-topic-name",
      "type": "java.lang.String",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.properties.KafkaProperties"
    },
    {
      "name": "jeap.messaging.authentication.publisher.signatureKey",
      "type": "java.lang.String",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.signature.publisher.SignaturePublisherProperties",
      "description": "The private key to sign messages."
    },
    {
      "name": "jeap.messaging.authentication.publisher.signatureCertificate",
      "type": "java.lang.String",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.signature.publisher.SignaturePublisherProperties",
      "description": "The public certificate to include in the message for signature verification."
    },
    {
      "name": "jeap.messaging.authentication.subscriber.requireSignature",
      "type": "java.lang.Boolean",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.signature.subscriber.SignatureSubscriberProperties",
      "description": "Whether to require a signature on incoming messages (strict-mode if true). If set to false, messages without signature will be accepted, but messages with invalid signatures will still be rejected.",
      "defaultValue": "false"
    },
    {
      "name": "jeap.messaging.authentication.subscriber.acceptUnsignedMessagetypeWhitelist",
      "type": "java.util.Set<java.lang.String>",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.signature.subscriber.SignatureSubscriberProperties",
      "description": "A set of message types that are allowed to be received without a signature, even if requireSignature is true."
    },
    {
      "name": "jeap.messaging.authentication.subscriber.allowedPublishers",
      "type": "java.util.Map<java.lang.String,java.util.List<java.lang.String>>",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.signature.subscriber.SignatureSubscriberProperties",
      "description": "A map with key: the message type and value: a list of services that are allowed to publish them."
    },
    {
      "name": "jeap.messaging.authentication.subscriber.certificateChains",
      "type": "java.util.Map<java.lang.String, java.util.Map<java.lang.String,java.util.List<java.lang.String>>>",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.signature.subscriber.SignatureSubscriberProperties",
      "description": "A map with key: the certitiface name and value: the chain with a list of chain entries (certificates)"
    },
    {
      "name": "jeap.messaging.authentication.subscriber.allowNonJeapMessages",
      "type": "java.lang.Boolean",
      "sourceType": "ch.admin.bit.jeap.messaging.kafka.signature.subscriber.SignatureSubscriberProperties",
      "description": "Whether to allow messages that are not instances of jEAP Message (ch.admin.bit.jeap.messaging.model.Message). If true, such messages will be accepted without signature verification.",
      "defaultValue": "false"
    }
  ],
  "hints": []
}
